openapi: 3.0.0
components:
  schemas:
    ErrorResponse:
      title: ERROR Response
      description: >-
        This is a schema for responses in the JSON API format. For more, see
        http://jsonapi.org
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              id:
                description: >-
                  A unique identifier for this particular occurrence of the
                  problem.
                type: string
              links:
                description: >-
                  A resource object **MAY** contain references to other resource
                  objects ("relationships"). Relationships may be to-one or
                  to-many. Relationships can be specified by including a member
                  in a resource's links object.
                type: object
                properties:
                  self:
                    description: >-
                      A `self` member, whose value is a URL for the relationship
                      itself (a "relationship URL"). This URL allows the client
                      to directly manipulate the relationship. For example, it
                      would allow a client to remove an `author` from an
                      `article` without deleting the people resource itself.
                    type: string
                    format: uri
                  related:
                    description: >-
                      A link **MUST** be represented as either: a string
                      containing the link's URL or a link object.
                    oneOf:
                      - description: A string containing the link's URL.
                        type: string
                        format: uri
                      - type: object
                        required:
                          - href
                        properties:
                          href:
                            description: A string containing the link's URL.
                            type: string
                            format: uri
                          meta:
                            description: >-
                              Non-standard meta-information that can not be
                              represented as an attribute or relationship.
                            type: object
                            additionalProperties: true
                additionalProperties: true
              status:
                description: >-
                  The HTTP status code applicable to this problem, expressed as
                  a string value.
                type: string
              code:
                description: >-
                  An application-specific error code, expressed as a string
                  value.
                type: string
              title:
                description: >-
                  A short, human-readable summary of the problem. It **SHOULD
                  NOT** change from occurrence to occurrence of the problem,
                  except for purposes of localization.
                type: string
              detail:
                description: >-
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              source:
                type: object
                properties:
                  pointer:
                    description: >-
                      A JSON Pointer [RFC6901] to the associated entity in the
                      request document [e.g. "/data" for a primary data object,
                      or "/data/attributes/title" for a specific attribute].
                    type: string
                  parameter:
                    description: >-
                      A string indicating which query parameter caused the
                      error.
                    type: string
              meta:
                description: >-
                  Non-standard meta-information that can not be represented as
                  an attribute or relationship.
                type: object
                additionalProperties: true
            additionalProperties: false
          uniqueItems: true
        meta:
          description: >-
            Non-standard meta-information that can not be represented as an
            attribute or relationship.
          type: object
          additionalProperties: true
        links:
          description: >-
            A resource object **MAY** contain references to other resource
            objects ("relationships"). Relationships may be to-one or to-many.
            Relationships can be specified by including a member in a resource's
            links object.
          type: object
          properties:
            self:
              description: >-
                A `self` member, whose value is a URL for the relationship
                itself (a "relationship URL"). This URL allows the client to
                directly manipulate the relationship. For example, it would
                allow a client to remove an `author` from an `article` without
                deleting the people resource itself.
              type: string
              format: uri
            related:
              description: >-
                A link **MUST** be represented as either: a string containing
                the link's URL or a link object.
              oneOf:
                - description: A string containing the link's URL.
                  type: string
                  format: uri
                - type: object
                  required:
                    - href
                  properties:
                    href:
                      description: A string containing the link's URL.
                      type: string
                      format: uri
                    meta:
                      description: >-
                        Non-standard meta-information that can not be
                        represented as an attribute or relationship.
                      type: object
                      additionalProperties: true
          additionalProperties: true
      additionalProperties: false
    DocumentResponse:
      properties:
        AccountObject:
          type: object
          properties:
            Name:
              type: string
    ListDocumentResponse:
      type: array
      items:
        type: object
        properties:
          AccountObject:
            type: object
            properties:
              Name:
                type: string
    PutDocumentRequest:
      properties:
        AccountObject:
          type: object
          properties:
            Name:
              type: string
  securitySchemes:
    cognitoAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

info:
  title: 'energicos test'
  description: 'A crud api for accounts'
  version: 79a236f0-09ed-40c0-81ac-3cc9ef27dc1d

security:
  - cognitoAuth: []

paths:
  /accounts/:
    get:
      operationId: list
      summary: Fetch Accounts
      description: Fetch all Accounts
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip 
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
        - in: query
          name: accountName
          schema:
            type: string
          description: name of the account to search for
      responses:
        '200':
          description: Accounts list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocumentResponse'
        '500':
          description: An error message when creating an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /account/create:
    post:
      operationId: create
      summary: Create Account
      description: Creates an Account
      responses:
        '200':
          description: An Account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '500':
          description: An error message when creating an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /account/{id}:
    get:
      operationId: read
      summary: Read Account
      description: Read an Account
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UID of the Account
      responses:
        '200':
          description: An Account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '500':
          description: An error message when creating an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /account/update/{id}:
    put:
      operationId: update
      summary: Update Account
      description: Update an Account
      requestBody:
        description: Account object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDocumentRequest'
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UID of the Account
      responses:
        '200':
          description: An Account object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '500':
          description: An error message when creating an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /account/delete/{id}:
    delete:
      operationId: delete
      summary: Delete Account
      description: Delete an Account
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UID of the Account
      responses:
        '200':
          description: Delete status
          content: {}
        '500':
          description: An error message when creating an account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
